{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18852\\\\Desktop\\\\personalProjs\\\\Next\\\\first-next\\\\pages\\\\post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// posts/1/comments\nimport axios from 'axios';\n\nconst Post = ({\n  data,\n  id\n}) => __jsx(React.Fragment, null, __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }\n}, \"id:\", id), data.map(d => __jsx(Comment, _extends({}, d, {\n  key: d.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }\n}))));\n\nconst Comment = ({\n  email,\n  body\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, __jsx(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, email), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, body));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const {\n    data\n  } = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  console.log(555555555555);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/18852/Desktop/personalProjs/Next/first-next/pages/post.js"],"names":["axios","Post","data","id","map","d","Comment","email","body","getInitialProps","query","get","console","log"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACX,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAASA,EAAT,CADF,EAEGD,IAAI,CAACE,GAAL,CAASC,CAAC,IACT,MAAC,OAAD,eACMA,CADN;AAEE,EAAA,GAAG,EAAEA,CAAC,CAACF,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CAFH,CADF;;AAWA,MAAMG,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMC,IAAN,CAFF,CADF;;AAOAP,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAM;AAAER,IAAAA;AAAF,MAAW,MAAMF,KAAK,CAACW,GAAN,CAAW,wDAAuDD,KAAK,CAACP,EAAG,EAA3E,CAAvB;AACFS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACE,yCAAYH,KAAZ;AAAmBR,IAAAA;AAAnB;AACD,CAJD;;AAMA,eAAeD,IAAf","sourcesContent":["// posts/1/comments\r\nimport axios from 'axios'\r\nconst Post = ({ data, id }) => (\r\n  <>\r\n    <div>id:{id}</div>\r\n    {data.map(d =>\r\n      <Comment\r\n        {...d}\r\n        key={d.id}\r\n      />)}\r\n  </>\r\n)\r\n\r\nconst Comment = ({ email, body }) => (\r\n  <div>\r\n    <h5>{email}</h5>\r\n    <div>{body}</div>\r\n  </div>\r\n)\r\n\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { data } = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\r\nconsole.log(555555555555);\r\n  return { ...query, data }\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}